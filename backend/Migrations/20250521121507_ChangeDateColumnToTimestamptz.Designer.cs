// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using backend.Context;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250521121507_ChangeDateColumnToTimestamptz")]
    partial class ChangeDateColumnToTimestamptz
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("backend.Entities.Storeddatum", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(999)
                        .HasColumnType("character varying(999)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<string>("Deviceid")
                        .HasMaxLength(999)
                        .HasColumnType("character varying(999)")
                        .HasColumnName("deviceid");

                    b.Property<string>("Linktopicture")
                        .HasMaxLength(999)
                        .HasColumnType("character varying(999)")
                        .HasColumnName("linktopicture");

                    b.HasKey("Id")
                        .HasName("storeddata_pkey");

                    b.ToTable("storeddata", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
